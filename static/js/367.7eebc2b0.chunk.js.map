{"version":3,"file":"static/js/367.7eebc2b0.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/Users.jsx","redux/users/users-selectors.js","components/Users/UsersContainer.jsx","hoc/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__oN5Ju\",\"user\":\"Users_user__ureKU\",\"main\":\"Users_main__66FJP\",\"image\":\"Users_image__LuIQN\",\"button\":\"Users_button__r5-uP\",\"follow\":\"Users_follow__Iacut\",\"unfollow\":\"Users_unfollow__rMyqP\",\"info\":\"Users_info__QJnqb\",\"name\":\"Users_name__85yu-\",\"status\":\"Users_status__2SZCL\",\"line\":\"Users_line__FfIkl\"};","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport user from \"../../assets/images/avatar.png\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Users = (props) => {\n  //   let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  //   let pages = [];\n  //   for (let i = 1; i <= pagesCount; i++) {     //used for displaying all pagenumbers (you may filter them if you want)\n  //     pages.push(i); // in returned jsx use pages.map (index) => {...}\n  //   }\n  console.log(\"users\", props);\n\n  return (\n    <>\n      <div className={s.line}>\n        <div onClick={() => props.firstPage()}>\n          <span>{\"<<\"}</span>\n        </div>\n        <div onClick={() => props.prevPage(props.currentPage)}>\n          <span> {\"<--\"}</span>\n        </div>\n        <div>\n          <span>{props.currentPage}</span>\n        </div>\n        <div onClick={() => props.nextPage(props.currentPage)}>\n          <span>{\"-->\"}</span>\n        </div>\n        <div onClick={() => props.lastPage()}>\n          <span>{\">>\"}</span>\n        </div>\n      </div>\n      <div className={s.users}>\n        {props.users.map((el) => {\n          return (\n            <div className={s.user} key={el.id}>\n              <div className={s.main}>\n                <NavLink to={\"/profile/\" + el.id}>\n                  <img\n                    className={s.image}\n                    alt=\"avatar\"\n                    src={el.photos.small ? el.photos.small : user}\n                  />\n                </NavLink>\n\n                {el.followed ? (\n                  <button\n                    className={`${s.button} ${s.unfollow}`}\n                    disabled={props.followingProgress.some(\n                      (id) => id === el.id\n                    )}\n                    onClick={() => {\n                      props.unfollow(el.id);\n                    }}\n                  >\n                    Unfollow\n                  </button>\n                ) : (\n                  <button\n                    className={`${s.button} ${s.follow}`}\n                    disabled={props.followingProgress.some(\n                      (id) => id === el.id\n                    )}\n                    onClick={() => {\n                      props.follow(el.id);\n                    }}\n                  >\n                    Follow\n                  </button>\n                )}\n              </div>\n\n              <div className={s.info}>\n                <p className={s.name}>{el.name}</p>\n                <p className={s.status}>{el.status}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","export const usersSelectors = {\n  getUsers(state) {\n    return state.usersReducer.users;\n  },\n  getPageSize(state) {\n    return state.usersReducer.pageSize;\n  },\n  getTotalUsersCount(state) {\n    return state.usersReducer.totalUsersCount;\n  },\n  getCurrentPage(state) {\n    return state.usersReducer.currentPage;\n  },\n  getIsFetching(state) {\n    return state.usersReducer.isFetching;\n  },\n  getFollowingProgress(state) {\n    return state.usersReducer.followingProgress;\n  },\n};\n","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport {\n  follow,\n  setCurrentPage,\n  unfollow,\n  getUsers,\n} from \"../../redux/users/users-reducer\";\n\nimport { Users } from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport WithAuthRedirect from \"../../hoc/AuthRedirect\";\nimport { compose } from \"redux\";\nimport { usersSelectors } from \"../../redux/users/users-selectors\";\n\nconst mapStateToProps = (state) => {\n  return {\n    users: usersSelectors.getUsers(state),\n    pageSize: usersSelectors.getPageSize(state),\n    totalUsersCount: usersSelectors.getTotalUsersCount(state),\n    currentPage: usersSelectors.getCurrentPage(state),\n    isFetching: usersSelectors.getIsFetching(state),\n    followingProgress: usersSelectors.getFollowingProgress(state),\n  };\n};\n\nclass UsersContainer extends React.Component {\n  pageChanging = (pageNumber) => {\n    this.props.getUsers(pageNumber, this.props.pageSize);\n    this.props.setCurrentPage(pageNumber);\n  };\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  nextPage = (pageNumber) => {\n    if (\n      pageNumber === Math.ceil(this.props.totalUsersCount / this.props.pageSize)\n    )\n      return;\n    let newNumber = ++pageNumber;\n    this.pageChanging(newNumber);\n  };\n\n  prevPage = (pageNumber) => {\n    if (pageNumber === 1) return;\n    let newNumber = --pageNumber;\n    this.pageChanging(newNumber);\n  };\n\n  lastPage = () => {\n    const newNumber = Math.ceil(\n      this.props.totalUsersCount / this.props.pageSize\n    );\n\n    if (this.props.currentPage === newNumber) return;\n    this.pageChanging(newNumber);\n  };\n\n  firstPage = () => {\n    const newNumber = 1;\n    if (this.props.currentPage === newNumber) return;\n    this.pageChanging(newNumber);\n  };\n\n  render() {\n    console.log(\"usersContainer\", this.props);\n\n    if (this.props.isFetching) return <Preloader />;\n    return (\n      <>\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          firstPage={this.firstPage}\n          prevPage={this.prevPage}\n          nextPage={this.nextPage}\n          lastPage={this.lastPage}\n          users={this.props.users}\n          currentPage={this.props.currentPage}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n          followingProgress={this.props.followingProgress}\n        />\n      </>\n    );\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps /*mapDispatchToProps*/, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    getUsers,\n  }),\n  WithAuthRedirect\n)(UsersContainer);\n","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth/auth-selectors\";\n\nconst mapStateToPropsforRedirect = (state) => ({\n  isAuth: authSelectors.getIsAuth(state),\n});\n\nfunction WithAuthRedirect(Component) {\n  function redirectCompoennt(props) {\n    if (!props.isAuth) return <Navigate to={\"/login\"} />;\n    return <Component {...props} />;\n  }\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(\n    redirectCompoennt\n  );\n\n  return ConnectedAuthRedirectComponent;\n}\n\nexport default WithAuthRedirect;\n"],"names":["Users","props","console","log","className","s","onClick","firstPage","prevPage","currentPage","nextPage","lastPage","users","map","el","to","id","alt","src","photos","small","user","followed","disabled","followingProgress","some","unfollow","follow","name","status","usersSelectors","state","usersReducer","pageSize","totalUsersCount","isFetching","UsersContainer","pageChanging","pageNumber","getUsers","setCurrentPage","Math","ceil","newNumber","this","Preloader","React","compose","connect","WithAuthRedirect","mapStateToPropsforRedirect","isAuth","authSelectors","Component"],"sourceRoot":""}