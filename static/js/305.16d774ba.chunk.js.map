{"version":3,"file":"static/js/305.16d774ba.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/LoginForm/index.jsx","components/Login/Login.jsx","webpack://my-app/./src/components/common/FormsControls/Input/Input.module.css?13ef","components/common/FormsControls/Input/Input.jsx","helpers/FormHelpers.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"Login_loginPage__lfdk0\",\"loginWrapper\":\"Login_loginWrapper__Zly+A\",\"title\":\"Login_title__vcg8P\",\"form\":\"Login_form__xawx9\",\"rememberMe\":\"Login_rememberMe__gahz2\",\"checkBox\":\"Login_checkBox__yWus7\",\"captcha\":\"Login_captcha__SfbCB\",\"generalError\":\"Login_generalError__XZOMB\",\"send\":\"Login_send__KIgDD\",\"button\":\"Login_button__OdYu-\",\"link\":\"Login_link__zOr2E\"};","import React from \"react\";\nimport styles from \"../Login.module.css\";\nimport { Field, Form } from \"react-final-form\";\nimport { formHelpers } from \"../../../helpers/FormHelpers\";\nimport Input from \"../../common/FormsControls/Input/Input\";\n\nconst LoginForm = (props) => {\n  const onSubmit = (data) => {\n    props.getLoginUserData(data);\n  };\n\n  const captchaUrl = props.captchaUrl;\n\n  return (\n    <div className={styles.loginWrapper}>\n      <h2 className={styles.title}>Login</h2>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitting, invalid }) => (\n          <form className={styles.form} onSubmit={handleSubmit}>\n            <Field\n              className={styles.input}\n              validate={formHelpers.composeValidators(\n                formHelpers.required,\n                formHelpers.emailValidation\n              )}\n              autoComplete={\"username\"}\n              name={\"email\"}\n              placeholder={\"Enter email\"}\n              type={\"email\"}\n              component={Input}\n            />\n            <Field\n              className={styles.input}\n              validate={formHelpers.required}\n              autoComplete={\"password\"}\n              name={\"password\"}\n              placeholder={\"Enter password\"}\n              type={\"password\"}\n              component={Input}\n            />\n            <div className={styles.rememberMe}>\n              <label htmlFor=\"rememberMe\">Remember me</label>\n              <Field\n                className={styles.checkBox}\n                name=\"rememberMe\"\n                component={\"input\"}\n                type={\"checkbox\"}\n              />\n            </div>\n\n            {captchaUrl && (\n              <>\n                <img\n                  src={captchaUrl}\n                  alt={captchaUrl}\n                  className={styles.captcha}\n                />\n                <Field\n                  className={styles.input}\n                  validate={formHelpers.required}\n                  autoComplete={\"captcha\"}\n                  name={\"captcha\"}\n                  placeholder={\"Enter captcha\"}\n                  component={Input}\n                />{\" \"}\n              </>\n            )}\n\n            {props.error && (\n              <span className={styles.generalError}> {props.error} </span>\n            )}\n\n            <div className={styles.send}>\n              <button\n                disabled={submitting || invalid}\n                type=\"submit\"\n                className={styles.button}\n              >\n                Login\n              </button>\n              <a\n                className={styles.link}\n                href=\"https://social-network.samuraijs.com/signUp\"\n                target=\"blank\"\n              >\n                Register\n              </a>\n            </div>\n          </form>\n        )}\n      ></Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport { getLoginUserData } from \"../../redux/auth/auth-reducer\";\nimport s from \"./Login.module.css\";\nimport { Navigate } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport { authSelectors } from \"../../redux/auth/auth-selectors\";\n\nconst Login = (props) => {\n  if (props.isAuth) {\n    return <Navigate to=\"/profile\" />;\n  }\n  return (\n    <div className={s.loginPage}>\n      <LoginForm {...props} captchaUrl={props.captchaUrl} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: authSelectors.getIsAuth(state),\n    error: authSelectors.getLoginError(state),\n    captchaUrl: authSelectors.getCaptcha(state),\n  };\n};\n\nexport default connect(mapStateToProps, { getLoginUserData })(Login);\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"Input_formControl__LCjIl\",\"error\":\"Input_error__UxBnS\",\"inputField\":\"Input_inputField__Xv+vd\"};","import React from \"react\";\nimport s from \"./Input.module.css\";\n\nexport default function Input({ input, meta, ...props }) {\n  const hasError = meta.error && meta.touched;\n  return (\n    <div className={` ${s.formControl}  ${hasError ? s.error : \"\"}`}>\n      <input {...input} {...props} className={s.inputField} />\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n}\n","export const formHelpers = {\n  composeValidators:\n    (...validators) =>\n    (value) =>\n      validators.reduce(\n        (error, validator) => error || validator(value),\n        undefined\n      ),\n\n  maxLength: (maxValue) => (text) =>\n    text.length > maxValue ? `Max length is ${maxValue}` : undefined,\n\n  required: (value) => (value ? undefined : \"Field is required!!\"),\n\n  emailValidation(email) {\n    const regEmail =\n      /^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\\-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+\\-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6})$/;\n    return email.match(regEmail) ? undefined : \"The email is invalid\";\n  },\n  githubLinkValidation(link) {\n    if (!link) return null;\n    if (\n      link.startsWith(\"github.com\") ||\n      link.startsWith(\"https://github.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link!!!\";\n    }\n  },\n  vkLinkValidation(link) {\n    if (!link) return null;\n\n    if (link.startsWith(\"vk.com\") || link.startsWith(\"https://vk.com\")) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n  facebookLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"facebook.com\") ||\n      link.startsWith(\"https://www.facebook.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n\n  instagramLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"instagra.com\") ||\n      link.startsWith(\"instagram.com\") ||\n      link.startsWith(\"https://www.instagram.com/\") ||\n      link.startsWith(\"www.instagram.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n\n  twitterLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"https://twitter.com\") ||\n      link.startsWith(\"twitter.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n  youtubeLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"https://www.youtube.com\") ||\n      link.startsWith(\"www.youtube.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n};\n"],"names":["props","captchaUrl","className","styles","onSubmit","data","getLoginUserData","render","handleSubmit","submitting","invalid","validate","formHelpers","autoComplete","name","placeholder","type","component","Input","htmlFor","src","alt","error","disabled","href","target","connect","state","isAuth","authSelectors","to","s","input","meta","hasError","touched","composeValidators","validators","value","reduce","validator","undefined","maxLength","maxValue","text","length","required","emailValidation","email","match","githubLinkValidation","link","startsWith","vkLinkValidation","facebookLinkValidation","instagramLinkValidation","twitterLinkValidation","youtubeLinkValidation"],"sourceRoot":""}