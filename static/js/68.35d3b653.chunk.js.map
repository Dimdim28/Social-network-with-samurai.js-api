{"version":3,"file":"static/js/68.35d3b653.chunk.js","mappings":"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","sources":["redux/dialogs/dialogs-selectors.js","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/index.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/index.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx","webpack://my-app/./src/components/common/FormsControls/TextArea/TextArea.module.css?be30","components/common/FormsControls/TextArea/TextArea.jsx","webpack://my-app/./src/components/common/Forms/AddTextForm.module.css?fb63","components/common/Forms/AddTextForm.jsx","helpers/FormHelpers.js","hoc/AuthRedirect.js"],"sourcesContent":["export const dialogsSelectors = {\n  getMessages(state) {\n    return state.dialogsReducer.messages[state.dialogsReducer.currentDialog];\n  },\n  getDialogs(state) {\n    return state.dialogsReducer.dialogs;\n  },\n  getCurrentDialog(state) {\n    return state.dialogsReducer.currentDialog;\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogItems\":\"Dialogs_dialogItems__VFpmc\",\"dialog\":\"Dialogs_dialog__htSTl\",\"avatar\":\"Dialogs_avatar__J0Uvr\",\"active\":\"Dialogs_active__t8cjl\",\"messagesArea\":\"Dialogs_messagesArea__z8K+O\",\"messages\":\"Dialogs_messages__Cg2l+\"};","import s from \"../Dialogs.module.css\";\n\nconst DialogItem = (props) => {\n  const status = props.isActive ? s.active : \"\";\n  return (\n    <div\n      onClick={() => props.chooseDialog(props.id)}\n      className={`${s.dialog} ${status}`}\n    >\n      <img className={s.avatar} src={props.avatar} alt=\"avatar\"></img>\n      {props.name}\n    </div>\n  );\n};\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\",\"first\":\"Message_first__lEpbH\",\"avatar\":\"Message_avatar__BcHJo\",\"second\":\"Message_second__QwpuM\",\"text\":\"Message_text__yBfK4\"};","import s from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={`${s.message} ${s[props.person]}`}>\n      {props.person === \"first\" && (\n        <img className={s.avatar} src={props.avatar} alt=\"avatar\"></img>\n      )}\n      <p className={s.text}>{props.message}</p>\n\n      {props.person === \"second\" && (\n        <img className={s.avatar} src={props.avatar} alt=\"avatar\"></img>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport WithAuthRedirect from \"../../hoc/AuthRedirect\";\n\nimport {\n  addMessageActionCreator,\n  setCurrentDialog,\n} from \"../../redux/dialogs/dialogs-reducer\";\nimport { dialogsSelectors } from \"../../redux/dialogs/dialogs-selectors\";\nimport { Dialogs } from \"./Dialogs\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogs: dialogsSelectors.getDialogs(state),\n    messages: dialogsSelectors.getMessages(state),\n    currentDialog: dialogsSelectors.getCurrentDialog(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (data) => {\n      dispatch(addMessageActionCreator(data));\n    },\n    chooseDialog: (id) => {\n      dispatch(setCurrentDialog(id));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithAuthRedirect\n)(Dialogs);\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem\";\nimport Message from \"./Message\";\nimport AddTextForm from \"../common/Forms/AddTextForm\";\n\nexport const Dialogs = (props) => {\n  const submit = (data, form) => {\n    props.sendMessage(data);\n    form.restart();\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>\n        {props.dialogs.map((el) => (\n          <DialogItem\n            key={el.id}\n            name={el.name}\n            isActive={el.isActive}\n            avatar={el.avatar}\n            chooseDialog={props.chooseDialog}\n            id={el.id}\n          />\n        ))}\n      </div>\n      <div className={s.messagesArea}>\n        <div className={s.messages}>\n          {props.messages.map((el) => (\n            <Message\n              key={el.id}\n              message={el.message}\n              avatar={el.avatar}\n              person={el.person}\n            />\n          ))}\n        </div>\n\n        <AddTextForm submit={submit} buttonLabel=\"Add message\" />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"TextArea_formControl__Rinx4\",\"textArea\":\"TextArea_textArea__ns18L\",\"error\":\"TextArea_error__95PGv\"};","import React from \"react\";\nimport s from \"./TextArea.module.css\";\n\nexport default function TextArea({ input, meta, ...props }) {\n  const hasError = meta.error && meta.touched;\n  return (\n    <div className={` ${s.formControl}  ${hasError ? s.error : \"\"}`}>\n      <textarea className={s.textArea} {...input} {...props} />\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddTextForm_form__akPUv\",\"inputDescr\":\"AddTextForm_inputDescr__kXzlf\",\"addButton\":\"AddTextForm_addButton__PiRqt\"};","import { Field, Form } from \"react-final-form\";\nimport { formHelpers } from \"../../../helpers/FormHelpers\";\nimport TextArea from \"../FormsControls/TextArea/TextArea\";\nimport styles from \"./AddTextForm.module.css\";\n\nconst AddTextForm = (props) => {\n  return (\n    <div>\n      <Form\n        onSubmit={props.submit}\n        render={({ handleSubmit, submitting, invalid }) => (\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <Field\n              className={styles.inputDescr}\n              name={\"newText\"}\n              component={TextArea}\n              validate={formHelpers.required}\n            />\n            <button\n              className={styles.addButton}\n              disabled={submitting || invalid}\n              type=\"submit\"\n            >\n              {props.buttonLabel}\n            </button>\n          </form>\n        )}\n      ></Form>\n    </div>\n  );\n};\n\nexport default AddTextForm;\n","export const formHelpers = {\n  composeValidators:\n    (...validators) =>\n    (value) =>\n      validators.reduce(\n        (error, validator) => error || validator(value),\n        undefined\n      ),\n\n  maxLength: (maxValue) => (text) =>\n    text.length > maxValue ? `Max length is ${maxValue}` : undefined,\n\n  required: (value) => (value ? undefined : \"Field is required!!\"),\n\n  emailValidation(email) {\n    const regEmail =\n      /^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\\-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+\\-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6})$/;\n    return email.match(regEmail) ? undefined : \"The email is invalid\";\n  },\n  githubLinkValidation(link) {\n    if (!link) return null;\n    if (\n      link.startsWith(\"github.com\") ||\n      link.startsWith(\"https://github.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link!!!\";\n    }\n  },\n  vkLinkValidation(link) {\n    if (!link) return null;\n\n    if (link.startsWith(\"vk.com\") || link.startsWith(\"https://vk.com\")) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n  facebookLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"facebook.com\") ||\n      link.startsWith(\"https://www.facebook.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n\n  instagramLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"instagra.com\") ||\n      link.startsWith(\"instagram.com\") ||\n      link.startsWith(\"https://www.instagram.com/\") ||\n      link.startsWith(\"www.instagram.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n\n  twitterLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"https://twitter.com\") ||\n      link.startsWith(\"twitter.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n  youtubeLinkValidation(link) {\n    if (!link) return null;\n\n    if (\n      link.startsWith(\"https://www.youtube.com\") ||\n      link.startsWith(\"www.youtube.com\")\n    ) {\n      return null;\n    } else {\n      return \"Invalid link\";\n    }\n  },\n};\n","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth/auth-selectors\";\n\nconst mapStateToPropsforRedirect = (state) => ({\n  isAuth: authSelectors.getIsAuth(state),\n});\n\nfunction WithAuthRedirect(Component) {\n  function redirectCompoennt(props) {\n    if (!props.isAuth) return <Navigate to={\"/login\"} />;\n    return <Component {...props} />;\n  }\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(\n    redirectCompoennt\n  );\n\n  return ConnectedAuthRedirectComponent;\n}\n\nexport default WithAuthRedirect;\n"],"names":["dialogsSelectors","state","dialogsReducer","messages","currentDialog","dialogs","props","status","isActive","s","onClick","chooseDialog","id","className","src","avatar","alt","name","person","message","compose","connect","dispatch","sendMessage","data","addMessageActionCreator","setCurrentDialog","WithAuthRedirect","map","el","AddTextForm","submit","form","restart","buttonLabel","TextArea","input","meta","hasError","error","touched","onSubmit","render","handleSubmit","submitting","invalid","styles","component","validate","formHelpers","disabled","type","composeValidators","validators","value","reduce","validator","undefined","maxLength","maxValue","text","length","required","emailValidation","email","match","githubLinkValidation","link","startsWith","vkLinkValidation","facebookLinkValidation","instagramLinkValidation","twitterLinkValidation","youtubeLinkValidation","mapStateToPropsforRedirect","isAuth","authSelectors","Component","to"],"sourceRoot":""}